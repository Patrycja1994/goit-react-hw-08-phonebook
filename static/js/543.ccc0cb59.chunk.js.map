{"version":3,"file":"static/js/543.ccc0cb59.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactListItem_button__SG6H2\"};","import { useDispatch } from 'react-redux';\nimport { removeContact } from 'redux/contacts/contactsOperation';\nimport css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact }) => {\n  const { name, id, number } = contact;\n\n  const dispatch = useDispatch();\n\n  const onContactDelete = id => {\n    console.log(id);\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <>\n      <li className={css.listItem}>\n        {name}: {number}\n        <button\n          className={css.button}\n          type=\"button\"\n          onClick={() => onContactDelete(id)}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n","export const selectContacts = state => {\n  if (state === undefined) {\n    return;\n  }\n  return state.contacts.contacts;\n};\n\nexport const selectFilter = state => {\n  if (state === undefined) {\n    return;\n  }\n  return state.contacts.filter;\n};\n\nexport const selectLoading = state => {\n  return state.contacts.isLoading;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"contactsHeader\":\"ContactsList_contactsHeader__GWrZG\"};","import { useSelector } from 'react-redux';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const contactsFilter = contacts.items.filter(contact =>\n    contact.name.includes(filter)\n  );\n\n  return (\n    <ul className={css.list}>\n      <h5 className={css.contactsHeader}>PHONEBOOK</h5>\n      {contactsFilter.map(({ id, name, number }) => (\n        <ContactListItem key={id} contact={{ id, name, number }} />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\"};","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContacts } from 'redux/contacts/contactsOperation';\nimport css from './ContactEditor.module.css';\n\nexport const TaskEditor = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name;\n    const number = form.elements.number;\n    if (\n      contacts.items.find(\n        contact =>\n          contact.name === name.value && contact.number === number.value\n      )\n    ) {\n      alert(`${name.value} is already in contacts`);\n      return;\n    }\n    const contact = {\n      name: name.value,\n      number: number.value,\n      id: nanoid(),\n    };\n    dispatch(addContacts(contact));\n    form.reset();\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={onFormSubmit}>\n        <label>Name</label>\n        <input\n          className={css.name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label>Number</label>\n        <input\n          className={css.number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button className={css.button}>Add contact</button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"findContacts\":\"Filter_findContacts__vu63G\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilters } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilters(value));\n  };\n  return (\n    <>\n      <p className={css.findContacts}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        value={useSelector(selectFilter)}\n      ></input>\n    </>\n  );\n};\n\nFilter.prototype = {\n  filter: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { TaskEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { selectLoading } from 'redux/contacts/contactsSelectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["ContactListItem","contact","name","id","number","dispatch","useDispatch","className","css","type","onClick","console","log","removeContact","onContactDelete","selectContacts","state","undefined","contacts","selectFilter","filter","selectLoading","isLoading","ContactsList","useSelector","contactsFilter","items","includes","map","TaskEditor","onSubmit","e","preventDefault","form","currentTarget","elements","find","value","alert","nanoid","addContacts","reset","pattern","title","required","Filter","onChange","target","toLowerCase","setFilters","Contacts","useEffect","fetchContacts","Helmet","prototype","PropTypes"],"sourceRoot":""}